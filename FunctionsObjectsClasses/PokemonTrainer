<?php

class Pokemon {

    private $name;
    private $element;
    private $health;

    function __construct(string $name, string $element, int $health) {
        $this->name = $name;
        $this->element = $element;
        $this->health = $health;
    }

    public function loseHealth() {
        return $this->health -= 10;
    }

    public function isAlive() {
        return $this->health > 0;
    }

    function getElement(): string {
        return $this->element;
    }

}

class Trainer {

    private $name;
    private $numberOfBadges;
    private $pokemons;

    function __construct($name) {
        $this->name = $name;
        $this->numberOfBadges = 0;
        $this->pokemons = [];
    }

    public function addPokemon(Pokemon $pokemon) {
        $this->pokemons[] = $pokemon;
    }

    public function battle(string $element) {
        $found = false;
        foreach ($this->pokemons as $pokemon) {
            if ($pokemon->getElement() == $element) {
                $found = true;
                break;
            }
        }
        if ($found) {
            $this->increaseBadges();
        } else {
            $this->damagePokemons();
        }
    }

    public function increaseBadges() {
        return $this->numberOfBadges++;
    }

    public function damagePokemons() {
        foreach ($this->pokemons as $pokemon) {
            $pokemon->loseHealth();
        }
        $this->pokemons = array_filter($this->pokemons, function (Pokemon $pokemon) {
            return $pokemon->isAlive();
        });
    }

    function getNumberOfBadges() {
        return $this->numberOfBadges;
    }

    public function __toString() {
        $sizeOfPokemons = count($this->pokemons);
        return "{$this->name} {$this->numberOfBadges} {$sizeOfPokemons}\n";
    }

}

$trainers = [];

while (true) {
    $input = explode(" ", readline());
    if ($input[0] == "Tournament") {
        break;
    }
    $trainerName = $input[0];
    $pokemonName = $input[1];
    $pokemonElement = $input[2];
    $pokemonHealth = intval($input[3]);

    if (array_key_exists($trainerName, $trainers)) {
        $trainer = new Trainer($trainerName);
        $trainers[$trainerName] = $trainer;
    }
    $pokemon = new Pokemon($pokemonName, $pokemonElement, $pokemonHealth);
    $trainers[$trainerName]->addPokemon($pokemon);
}


$element = readline();
while ($element != "End") {

    foreach ($trainers as $trainer) {
        $trainer->battle($element);
    }
    $element = readline();
}

usort($trainers, function (Trainer $t1, Trainer $t2) {
    return $t2->getNumberOfBadges() <=> $t1->getNumberOfBadges();
});

foreach ($trainers as $trainer) {
    echo $trainer;
}
